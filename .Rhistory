if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
colnames(snp)
as.character(colnames(snp))
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
colnames(snp) <- as.character(colnames(snp))
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
colnames(snp[cn]) < as.numeric(colnames(snp[cn]))
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
colnames(snp[cn]) < as.numeric(colnames(snp[cn]))
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
View(bfl)
colnames(bfl)
file <- "Os01t0106900-CHR1-372728-380713-OsDXR.csv"
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}
View(bfl)
colnames(bfl)
names(snp[cn]) in colnames(bfl)
names(snp[cn])
colnames(bfl) == names(snp[cn])
sum(colnames(bfl) == names(snp[cn]))
sum(colnames(bfl) == names(snp[cn])) != 0
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
if (sum(colnames(bfl) == names(snp[cn])) != 0) {next}
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
write_csv(bfl, '../Potential Salt Genes/bfch1.csv', na = '')
unlist(unique(na.omit(snp[cn]))
)
length(snips[!grepl('/', snips)])
snips <- unlist(unique(na.omit(snp[cn])))
length(snips[!grepl('/', snips)])
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
snips <- unlist(unique(na.omit(snp[cn])))
if (length(snips[!grepl('/', snips)]) > 1){
if (sum(colnames(bfl) == names(snp[cn])) != 0) {next}
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
write_csv(bfl, '../Potential Salt Genes/bfch1.csv', na = '')
help(strataG)
library(strataG)
help(strataG)
a <- matrix(c(3.394,-2.12, 3.39, -4.67, -2.12, 11.5, -2.12, -7.24, 3.39, -2.12, 3.39, -4.67, -4.67, -7.22, -4.67, 16.6))
a <- matrix(c(3.394,-2.12, 3.39, -4.67, -2.12, 11.5, -2.12, -7.24, 3.39, -2.12, 3.39, -4.67, -4.67, -7.22, -4.67, 16.6), 4, 4, byrow = TRUE)
View(a)
ev <- eigen(a)
View(ev)
ev$values
ev$vectors
df <- read_csv('../Potential Salt Genes/bfch2.csv', col_types = cols(.default = col_character()))
df <- df[c(1,5,31:length(df))]
library(tidyverse)
df <- read_csv('../Potential Salt Genes/bfch2.csv', col_types = cols(.default = col_character()))
df <- df[c(1,5,31:length(df))]
for (col in 3:length(df)) {
#fill NA with Ref
df[col][is.na(df[col])] <- unlist(df[col])[1]
#change anything that isn't ref into 1
df[col][df[col] != unlist(df[col])[1]] <- '1'
#change ref to 0
df[col][df[col] == unlist(df[col])[1]] <- '0'
#change to numneric
df[col] <- as.numeric(unlist(df[col]))
}
test <- matrix(c(0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0,0,1,0,0), 6,4 byrow = TRUE)
test <- matrix(c(0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0,0,1,0,0), 6,4, byrow = TRUE)
View(test)
testt <- transpose(test)
testt <- t(test)
View(testt)
pca <- prcomp(testt)
View(pca)
pca$x
pca$sdev
pca$sdev^2
pca.var <- pca$sdev^2
pca.var <- round(pca.var/sum(pca.var)*100, 1)
barplot(pca.var[1:10], main = 'Scree Plot', xlab = 'Principal Component',
ylab = 'Percent Variation')
View(testt)
s1 = a[1,] - sum(a[1,]) / 4
s1 = test[1,] - sum(test[1,]) / 4
pi <- (1+ (sum(test[i,]) / 4)) / 10
i <- 1
pi <- (1+ (sum(test[i,]) / 4)) / 10
step2 <- test[i,] / (pi*(1 - pi))
for (i in 1:6) {
step1 <- test[i,] - sum(test[i,]) / 4
pi <- (1+ (sum(test[i,]) / 4)) / 10
step2 <- test[i,] / (pi*(1 - pi))
}
for (i in 1:6) {
step1 <- test[i,] - sum(test[i,]) / 4
pi <- (1+ (sum(test[i,]) / 4)) / 10
step2 <- step1 / (pi*(1 - pi))
}
x <- matrix()
for (i in 1:6) {
step1 <- test[i,] - sum(test[i,]) / 4
pi <- (1+ (sum(test[i,]) / 4)) / 10
step2 <- step1 / (pi*(1 - pi))
x <- rbind(step2)
}
View(x)
x <- matrix()
for (i in 1:6) {
step1 <- test[i,] - sum(test[i,]) / 4
pi <- (1+ (sum(test[i,]) / 4)) / 10
step2 <- step1 / (pi*(1 - pi))
x <- rbind(x, step2)
}
x <- matrix(nrow = 4)
for (i in 1:6) {
step1 <- test[i,] - sum(test[i,]) / 4
pi <- (1+ (sum(test[i,]) / 4)) / 10
step2 <- step1 / (pi*(1 - pi))
x <- rbind(x, step2)
}
View(x)
x <- matrix(ncol = 4)
for (i in 1:6) {
step1 <- test[i,] - sum(test[i,]) / 4
pi <- (1+ (sum(test[i,]) / 4)) / 10
step2 <- step1 / (pi*(1 - pi))
x <- rbind(x, step2)
}
View(x)
x <- x[-1,]
View(x)
cov(x[,1], x[,1])
cov(x[,1], x[,2])
x[,1]
t1 <- c()
t2 <- matrix(ncol = 4)
for (i in 1:4) {
for (i2 in 1:4) {
s <- cov(x[,i], x[,i2])
t1 <- c(t1,s)
}
t2 <- rbind(t2, t1)
}
t2 <- matrix(ncol = 4)
for (i in 1:4) {
t1 <- c()
for (i2 in 1:4) {
s <- cov(x[,i], x[,i2])
t1 <- c(t1,s)
}
t2 <- rbind(t2, t1)
}
View(t2)
pca$x
eigen(t2)
eigen(t2[-1,])
eigen(t(t2[-1,]))
x[,1]
cov(x[,1], x[,1])
View(t2)
t2 <- t2[-1,]
View(t2)
eigen(t2)
eigen(t(t2))
pca$x
pca$x[,4]
sum(pca$x[,4])
x
X <- eigen(t2)
t(X)*X
t(X)
X
t(X)
t(X$vectors) * X$vectors
sqrt(4)
x <- matrix(ncol = 4)
for (i in 1:6) {
step1 <- test[i,] - sum(test[i,]) / 4
pi <- (1+ (sum(test[i,]) / 4)) / 10
step2 <- step1 / sqrt(pi*(1 - pi))
x <- rbind(x, step2)
}
x <- x[-1,]
cov(x[,1], x[,2])
t2 <- matrix(ncol = 4)
for (i in 1:4) {
t1 <- c()
for (i2 in 1:4) {
s <- cov(x[,i], x[,i2])
t1 <- c(t1,s)
}
t2 <- rbind(t2, t1)
}
t2 <- t2[-1,]
eigen(t(t2))
pca$x
test <- matrix(c(0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0,0,1,0,0), 6,4, byrow = TRUE)
x <- matrix(ncol = 4)
for (i in 1:6) {
step1 <- test[i,] - sum(test[i,]) / 4
pi <- (1+ (sum(test[i,]) / 4)) / 10
rs <- (1 + sum(step1))
step2 <- rs / sqrt(pi*(1 - pi))
x <- rbind(x, step2)
}
View(x)
x <- x[-1,]
t2 <- matrix(ncol = 4)
for (i in 1:4) {
t1 <- c()
for (i2 in 1:4) {
s <- cov(x[,i], x[,i2])
t1 <- c(t1,s)
}
t2 <- rbind(t2, t1)
}
t2 <- t2[-1,]
X <- eigen(t2)
View(X)
X$vectors
X$values
test <- matrix(c(0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0,0,1,0,0), 6,4, byrow = TRUE)
testt <- t(test)
pca <- prcomp(testt)
pca$x
View(X)
t2
x
step1 <- test[i,] - sum(test[i,]) / 4
step1
test <- matrix(c(0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0,0,1,0,0), 6,4, byrow = TRUE)
step1 <- test[i,] - sum(test[i,]) / 4
step1
test[6,]
step1 <- test[i,] - (sum(test[i,]) / 4)
step1
sum[test[i,]]
sum(test[i,])
test[i,]
i
pi <- (1+ (sum(step1) / 4)) / 10
pi
step1 <- test[i,] - (sum(test[i,]) / 4)
pi <- (1+ (sum(test[i,]))) / 10
step2 <- rs / sqrt(pi*(1 - pi))
x <- matrix(ncol = 4)
for (i in 1:6) {
step1 <- test[i,] - (sum(test[i,]) / 4)
pi <- (1+ (sum(test[i,]))) / 10
step2 <- rs / sqrt(pi*(1 - pi))
x <- rbind(x, step2)
}
x <- x[-1,]
cov(x[,1], x[,2])
x <- matrix(ncol = 4)
for (i in 1:6) {
step1 <- test[i,] - (sum(test[i,]) / 4)
pi <- (1+ (sum(test[i,]))) / 10
step2 <- step1 / sqrt(pi*(1 - pi))
x <- rbind(x, step2)
}
x <- x[-1,]
cov(x[,1], x[,2])
t2 <- matrix(ncol = 4)
for (i in 1:4) {
t1 <- c()
for (i2 in 1:4) {
s <- cov(x[,i], x[,i2])
t1 <- c(t1,s)
}
t2 <- rbind(t2, t1)
}
t2 <- t2[-1,]
X <- eigen(t2)
X$vectors
X$values
test <- test[-1,]
View(test)
x <- matrix(ncol = 4)
for (i in 1:6) {
step1 <- test[i,] - (sum(test[i,]) / 4)
pi <- (1+ (sum(test[i,]))) / 10
step2 <- step1 / sqrt(pi*(1 - pi))
x <- rbind(x, step2)
}
x <- matrix(ncol = 4)
for (i in 1:5) {
step1 <- test[i,] - (sum(test[i,]) / 4)
pi <- (1+ (sum(test[i,]))) / 10
step2 <- step1 / sqrt(pi*(1 - pi))
x <- rbind(x, step2)
}
x <- x[-1,]
cov(x[,1], x[,2])
t2 <- matrix(ncol = 4)
for (i in 1:4) {
t1 <- c()
for (i2 in 1:4) {
s <- cov(x[,i], x[,i2])
t1 <- c(t1,s)
}
t2 <- rbind(t2, t1)
}
t2 <- t2[-1,]
X <- eigen(t2)
X$vectors
View(t2)
sum(t2[,1])
sum(t2[1,])
(t2[,1])
sum(t2[2,])
sum(t2[3,])
sum(t2[4,])
X
sum(X[,1])
sum(X$vectors[,1])
sum(X$vectors[,2])
sum(X$vectors[,3])
sum(X$vectors[,4])
sum(X$vectors[4,])
sum(X$vectors[4,]^2)
sum(X$vectors[3,]^2)
sum(X$vectors[2,]^2)
sum(X$vectors[1,]^2)
(X$vectors[1,]^2)
X$vectors
test <- matrix(c(0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0,0,1,0,0), 6,4, byrow = TRUE)
test <- test[-1,]
testt <- t(test)
pca <- prcomp(testt)
pca$x
pca$rotation
library(ggplot2)
pca.data <- data.frame(Sample=rownames(mat),
X=pca$x[,1],
Y=pca$x[,2])
ggplot(data=pca.data, aes(x=X, y=Y, label=subpops)) +
geom_text() +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
pca.data <- data.frame(Sample=rownames(mat),
X=pca$x[,1],
Y=pca$x[,2])
library(ggplot2)
pca.data <- data.frame(X=pca$x[,1],
Y=pca$x[,2])
ggplot(data=pca.data, aes(x=X, y=Y, label=subpops)) +
geom_text() +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
library(ggplot2)
pca.data <- data.frame(X=pca$x[,1],
Y=pca$x[,2])
ggplot(data=pca.data, aes(x=X, y=Y)) +
geom_text() +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
ggplot(data=pca.data, aes(x=X, y=Y, label=names(X))) +
geom_text() +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
ggplot(data=pca.data, aes(x=X, y=Y, label=names(X))) +
geom_text() +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
names(X)
ggplot(data=pca.data, aes(x=X, y=Y, label=names(test))) +
geom_text() +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
ggplot(data=pca.data, aes(x=X, y=Y, label=names(test))) +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
X
Y
pca.data <- data.frame(X=pca$x[,1],
Y=pca$x[,2])
ggplot(data=pca.data, aes(x=X, y=Y, label=names(test))) +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
names(test)
ggplot(data=pca.data, aes(x=X, y=Y, label=c(1,2,3,4))) +
geom_text() +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
X
pca.data <- data.frame(X=X$vectors[,1],
Y=X$vectors[,2])
ggplot(data=pca.data, aes(x=X, y=Y, label=c(1,2,3,4))) +
geom_text() +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
mat <- data.matrix(df[3:length(df)])
rownames(mat) <- c('original', unname(unlist(na.omit(df[2]))))
plants <- unname(unlist(na.omit(df[1])))
subpops <- c('original', unname(unlist(na.omit(df[2]))))
pca <- prcomp(mat, scale. = TRUE)
plot(pca$x[,1], pca$x[,2])
pca.var <- pca$sdev^2
pca.var <- round(pca.var/sum(pca.var)*100, 1)
barplot(pca.var[1:10], main = 'Scree Plot', xlab = 'Principal Component',
ylab = 'Percent Variation')
library(ggplot2)
pca.data <- data.frame(Sample=rownames(mat),
X=pca$x[,1],
Y=pca$x[,2])
ggplot(data=pca.data, aes(x=X, y=Y, label=subpops)) +
geom_text() +
xlab(paste("PC1 - ", pca.var[1], "%", sep="")) +
ylab(paste("PC2 - ", pca.var[2], "%", sep="")) +
theme_bw() +
ggtitle("2183Genes CHR2 PC1 vs PC2")
mat
View(mat)
# load the DECIPHER library in R
library(DECIPHER)
# specify the path to the FASTA file (in quotes)
fas <- "C:/Users/Michael/Downloads/iqt2/175s.fasta"
# load the sequences from the file
# change "DNA" to "RNA" or "AA" if necessary
seqs <- readDNAStringSet(fas)
# write the alignment to a new FASTA file
writeXStringSet(aligned,
file="C:\Users\Michael\Downloads\iqt2\175sd.fasta")
writeXStringSet(seqs,
file="C:/Users/Michael/Downloads/iqt2/175sd.fasta")
