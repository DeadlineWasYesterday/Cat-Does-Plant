fqtab <- fqtab[rowSums(fqtab) != 0,]
#exception handling
#for every snp
resnuc <- data.frame()
for (nuc in rownames(fqtab)) {
square <- t(matrix(c(as.numeric(fqtab[orig,]), as.numeric(fqtab[nuc,])), nrow = 2))
#exception handling
if (sum(square) == 0) {square <-(matrix(c(1,1,1,1),nrow=2))}
#Calculate Fischer's exact
fexact <- fisher.test(square)
resnuc <- c(file, paste0(orig, colnames(snp)[bloc], nuc),  fexact['p.value'])
resnuc <- unlist(unname(resnuc))
names(resnuc) <- c('file', 'location', 'p')
rescol <- dplyr::bind_rows(rescol, resnuc)
}
#save filename, blocation and two p values
resgen <- dplyr::bind_rows(resgen, rescol)
}
#exit loop and save result
result <- dplyr::bind_rows(result, resgen)
}
#exit loop and save result file
result$p <- as.numeric(result$p)
write.csv(result, '../Potential Salt Genes/882 snps split4.csv')
length(duplicated(result$p))
length(unique(result))
rm(list = ls())
#make result table
result <- data.frame()
#for everyfile
for (file in dir('../Potential Salt Genes/snpiaout/')) {
resgen <- data.frame()
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp$SES <- as.numeric(snp$SES)
ref <- read_csv(sprintf('../Potential Salt Genes/snpia/%s', file), col_types = cols(.default = col_character()))
ref <- ref[1,]
#split into tolerant and sensitive
sensitive <- snp[which(snp$SES > 4),]
sensitive <- dplyr::bind_rows(sensitive, ref)
tolerant <- snp[which(snp$SES < 4),]
#for every column
for (bloc in 7:(length(colnames(snp)) - 4) ) {
rescol <- data.frame()
#ref base
orig <- unname(unlist(ref[bloc - 1]))
#count whole letters
asen <- sum(sensitive[bloc][!is.na(sensitive[bloc])] == 'A')
atol <- sum(tolerant[bloc][!is.na(tolerant[bloc])] == 'A')
csen <- sum(sensitive[bloc][!is.na(sensitive[bloc])] == 'C')
ctol <- sum(tolerant[bloc][!is.na(tolerant[bloc])] == 'C')
tsen <- sum(sensitive[bloc][!is.na(sensitive[bloc])] == 'T')
ttol <- sum(tolerant[bloc][!is.na(tolerant[bloc])] == 'T')
gsen <- sum(sensitive[bloc][!is.na(sensitive[bloc])] == 'G')
gtol <- sum(tolerant[bloc][!is.na(tolerant[bloc])] == 'G')
gapsen <- sum(sensitive[bloc][!is.na(sensitive[bloc])] == '-')
gaptol <- sum(tolerant[bloc][!is.na(tolerant[bloc])] == '-')
#count half letters
wc <- unlist(unname(sensitive[bloc]))
ixr <- lapply(wc, grepl, pattern = '/', fixed = TRUE)
ixr <- as.logical(as.numeric(unlist(ixr)))
hls <- wc[ixr]
lts <- unlist(strsplit(hls, '/'))
hcasen <- sum(lts == 'A')
hccsen <- sum(lts == 'C')
hctsen <- sum(lts == 'T')
hcgsen <- sum(lts == 'G')
hcgapsen <- sum(lts == '-')
wc <- unlist(unname(tolerant[bloc]))
ixr <- lapply(wc, grepl, pattern = '/', fixed = TRUE)
ixr <- as.logical(as.numeric(unlist(ixr)))
hls <- wc[ixr]
lts <- unlist(strsplit(hls, '/'))
hcatol <- sum(lts == 'A')
hcctol <- sum(lts == 'C')
hcttol <- sum(lts == 'T')
hcgtol <- sum(lts == 'G')
hcgaptol <- sum(lts == '-')
#count total letters
totasen <- asen + hcasen/2
totcsen <- csen + hccsen/2
totgsen <- gsen + hcgsen/2
tottsen <- tsen + hctsen/2
totgapsen <- gapsen + hcgapsen/2
totatol <- atol + hcatol/2
totctol <- ctol + hcctol/2
totgtol <- gtol + hcgtol/2
totttol <- ttol + hcttol/2
totgaptol <- gaptol + hcgaptol
#make freq table
fqmat <- matrix(c(totasen,totcsen,totgsen,tottsen,totgapsen,totatol,totctol,totgtol,totttol,totgaptol), nrow = 5)
fqtab <- data.frame(fqmat)
rownames(fqtab) <- c('A', 'C', 'G', 'T', '-')
fqtab <- fqtab[rowSums(fqtab) != 0,]
#exception handling
#for every snp
for (nuc in rownames(fqtab)) { # [which(-orig)]
resnuc <- data.frame()
square <- t(matrix(c(as.numeric(fqtab[orig,]), as.numeric(fqtab[nuc,])), nrow = 2))
#exception handling
if (sum(square) == 0) {square <-(matrix(c(1,1,1,1),nrow=2))}
#Calculate Fischer's exact
fexact <- fisher.test(square)
resnuc <- c(file, paste0(orig, colnames(snp)[bloc], nuc),  fexact['p.value'])
resnuc <- unlist(unname(resnuc))
names(resnuc) <- c('file', 'location', 'p')
rescol <- dplyr::bind_rows(rescol, resnuc)
}
#save filename, blocation and two p values
resgen <- dplyr::bind_rows(resgen, rescol)
}
#exit loop and save result
result <- dplyr::bind_rows(result, resgen)
}
#exit loop and save result file
result$p <- as.numeric(result$p)
write.csv(result, '../Potential Salt Genes/882 snps split4.csv')
#4 running. 2,6 and 8 to go.
rownames(fqtab)
fqtab != orig
rownames(fqtab) != orig
rownames(fqtab)[rownames(fqtab) != orig]
library(tidyverse)
#find files
rapt <- read_csv('../Potential Salt Genes/Base/24200×27 first hit genelist.csv')
#rename
rapt <- rapt[rapt$Status == 'Done.',]
rapt$wGName <- unlist(lapply(rapt$`Oryzabase Gene Symbol Synonym(s)`, str_extract, pattern = '([A-Za-z0-9])+'))
#find files
rapt <- read_csv('../Potential Salt Genes/Base/24200×27 first hit genelist.csv')
for (file in list.files('../Potential Salt Genes/snpia/')) {
chr <- unlist(str_split(file, '-'))[2]
wps <- as.integer(unlist(str_split(file, '-'))[3])
end <- as.integer(unlist(str_split(file, '-'))[4])
l1 <- rapt[which(rapt$Chromosome == chr),]
l2 <- l1[which(l1$`With Promoter Start` >= wps),]
l3 <- l2[which(l2$End <= end),]
check <- l3$Gene[1]
rapt$Status[which(rapt$Gene == check)] <- 'Done.'
}
#rename
rapt <- rapt[rapt$Status == 'Done.',]
rapt$wGName <- unlist(lapply(rapt$`Oryzabase Gene Symbol Synonym(s)`, str_extract, pattern = '([A-Za-z0-9])+'))
rapt$Identifier <- paste0(rapt$Chromosome, '-', rapt$`With Promoter Start`, '-', rapt$End)
rapt$wGName[which(is.na(rapt$wGName))] <- paste0('NoName', c(1:length(which(is.na(rapt$wGName)))))
rapt$filename <- paste0(rapt$Gene, '-', rapt$Identifier, '-', rapt$wGName)
rapt$MSUfilename <- ''
#second filename column for msu files
#needs to be run after duplicates are removed
for (file in list.files('../Potential Salt Genes/snpia/')) {
chr <- unlist(str_split(file, '-'))[2]
wps <- as.integer(unlist(str_split(file, '-'))[3])
end <- as.integer(unlist(str_split(file, '-'))[4])
l1 <- rapt[which(rapt$Chromosome == chr),]
l2 <- l1[which(l1$`With Promoter Start` >= wps),]
l3 <- l2[which(l2$End <= end),]
check <- l3$Gene[1]
rapt$MSUfilename[which(rapt$Gene == check)] <- file }
View(rapt)
rapt[order(rapt$Identifier)]
View(rapt[order(rapt$Identifier),])
View(rapt[order(rapt$Gene),])
rapt <- rapt[order(rapt$Gene),]
list.files('../Potential Salt Genes/snpia/')
#compile columns into bfile
bfl <- read_csv("Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
c(1:4,6:7)
View(bfl)
bfl[order(bfl$Id)]
View(bfl[order(bfl$Id)])
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
View(bfl[order(bfl$Id)])
View(bfl)
bfl[order(bfl['Id'])]
bfl[order(bfl['Id']),]
View(bfl[order(bfl['Id']),])
bfl <- bfl[order(bfl['Id']),]
View(bfl)
bfl[c(1:5), length(bfl)-21:length(bfl)]
View(bfl)
View(bfl[c(1:5), length(bfl)-20:length(bfl)])
View(bfl[c(1:5, length(bfl)-20:length(bfl))])
View(bfl[c(1:5, length(bfl)-21:length(bfl))])
View(bfl[c(1:6, length(bfl)-21:length(bfl))])
View(bfl[c(1:, length(bfl)-22:length(bfl))])
View(bfl[c(1:5, length(bfl)-22:length(bfl))])
View(bfl[c(1:5, length(bfl)-22:length(bfl))])
View(bfl[c(1:5, length(bfl)-21:length(bfl))])
View(bfl[c(1:5, length(bfl)-21:length(bfl))])
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
View(bfl[c(1:5, length(bfl)-21:length(bfl))])
View(bfl[c(1:5, (length(bfl)-21):(length(bfl)))])
View(bfl[c(1:5, (length(bfl)-24):(length(bfl)))])
View(bfl[c(1:5, (length(bfl)-25):(length(bfl)))])
View(bfl[c(1:5, (length(bfl)-24):(length(bfl)))])
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
View(bfl)
cn = 9
snp[9]
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp[9]
unique(snp[9])
unique(na.omit(snp[9]))
test <- unique(na.omit(snp[9]))
grepl('/', test)
test
list(test)
unlist(test)
test <- unlist(test)
grepl('/', test)
test[!grepl('/', test)]
length(unlist(unique(snp[cn]))[!grepl('/', test)])
unlist(unique(snp[cn])
)
unlist(unique(snp[cn]))[!grepl('/', test)]
length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)])
unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]
dplyr::bind_cols(bfl, snp[cn])
bfl <- dplyr::bind_cols(bfl, snp[cn])
View(bfl)
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpia/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}  }
View(bfl)
file
View(bfl)
colnames(bfl)
bfl
file
colnames(bfl)
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
}  }
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
}  }
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
}  }
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
)
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
}
View(bfl)
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpia/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
}  }
View(bfl)
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
}
View(bfl)
file
file[1:4]
file[[1]][1:4]
file[1][1:4]
strtrim(file, 4)
strtrim(file, 4) == 'Os01'
for (file in list.files('../Potential Salt Genes/snpia/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
}}
else {break}
}
View(bfl)
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpia/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
}}
else {break}
}
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)])
}
}}
else {break}
}
file
View(bfl)
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- merge(bfl, snp[c(1, cn)], on = 'Id')
}
}}
else {break}
}
View(bfl)
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
?bind_cols
if (nrow(snp) != 175) {print(file)}
#check missing rows
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
if (nrow(snp) != 175) {print(file)}
}
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
colnames(snp)
as.character(colnames(snp))
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
colnames(snp) <- as.character(colnames(snp))
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
colnames(snp[cn]) < as.numeric(colnames(snp[cn]))
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
colnames(snp[cn]) < as.numeric(colnames(snp[cn]))
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
View(bfl)
colnames(bfl)
file <- "Os01t0106900-CHR1-372728-380713-OsDXR.csv"
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}
View(bfl)
colnames(bfl)
names(snp[cn]) in colnames(bfl)
names(snp[cn])
colnames(bfl) == names(snp[cn])
sum(colnames(bfl) == names(snp[cn]))
sum(colnames(bfl) == names(snp[cn])) != 0
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
if (length(unlist(unique(na.omit(snp[cn])))[!grepl('/', test)]) > 1){
if (sum(colnames(bfl) == names(snp[cn])) != 0) {next}
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
write_csv(bfl, '../Potential Salt Genes/bfch1.csv', na = '')
unlist(unique(na.omit(snp[cn]))
)
length(snips[!grepl('/', snips)])
snips <- unlist(unique(na.omit(snp[cn])))
length(snips[!grepl('/', snips)])
#compile columns into bfile
bfl <- read_csv("../Potential Salt Genes/snpiaout/Os04t0473900-CHR4-23696662-23707348-DWA1.csv", col_types = cols(.default = col_character()))
bfl <- bfl[order(bfl['Id']),]
bfl <- bfl[c(1:5, (length(bfl)-24):(length(bfl)))]
for (file in list.files('../Potential Salt Genes/snpiaout/')) {
snp <- read_csv(sprintf('../Potential Salt Genes/snpiaout/%s', file), col_types = cols(.default = col_character()))
snp <- snp[order(snp['Id']),]
if (strtrim(file, 4) == 'Os01') {
for (cn in 7:(length(colnames(snp)) - 25)) {
snips <- unlist(unique(na.omit(snp[cn])))
if (length(snips[!grepl('/', snips)]) > 1){
if (sum(colnames(bfl) == names(snp[cn])) != 0) {next}
bfl <- dplyr::bind_cols(bfl, snp[cn])
}
}}
else {break}
}
write_csv(bfl, '../Potential Salt Genes/bfch1.csv', na = '')
help(strataG)
library(strataG)
help(strataG)
